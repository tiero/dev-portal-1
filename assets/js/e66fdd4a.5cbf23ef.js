"use strict";(self.webpackChunkprem_docs=self.webpackChunkprem_docs||[]).push([[5762],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(g,o(o({ref:t},l),{},{components:n})):r.createElement(g,o({ref:t},l))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4813:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={id:"chat-quickstart",title:"Quick Start with LangChain",sidebar_label:"LangChain",sidebar_position:2},o="Quick Start with LangChain",s={unversionedId:"prem-app/usage/embeddings/chat-quickstart",id:"prem-app/usage/embeddings/chat-quickstart",title:"Quick Start with LangChain",description:"- Import the necessary dependencies",source:"@site/docs/prem-app/usage/embeddings/langchain.md",sourceDirName:"prem-app/usage/embeddings",slug:"/prem-app/usage/embeddings/chat-quickstart",permalink:"/docs/prem-app/usage/embeddings/chat-quickstart",draft:!1,editUrl:"https://github.com/premAI-io/dev-portal/docs/prem-app/usage/embeddings/langchain.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"chat-quickstart",title:"Quick Start with LangChain",sidebar_label:"LangChain",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"APIs",permalink:"/docs/prem-app/usage/embeddings/api"},next:{title:"Vector Store",permalink:"/docs/category/vector-store"}},p={},c=[],l={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start-with-langchain"},"Quick Start with LangChain"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Import the necessary dependencies")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'import os\n\nfrom langchain.embeddings import OpenAIEmbeddings\n\nos.environ["OPENAI_API_KEY"] = "random-string"\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Instantiate the Embeddings Object connecting to the service")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'embeddings = OpenAIEmbeddings(openai_api_base="http://localhost:8000/api/v1")\ntext = "Prem is an easy to use open source AI platform."\nquery_result = embeddings.embed_query(text)\ndoc_result = embeddings.embed_documents([text])\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Generate the Embeddings")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'embeddings = OpenAIEmbeddings(openai_api_base="http://localhost:8000/api/v1")\ntext = """\n\nPrem is an easy to use open source AI platform. With Prem you can quickly build provacy preserving AI applications.\n\nPrem App\n\nAn intuitive desktop application designed to effortlessly deploy and self-host Open-Source AI models without exposing sensitive data to third-party.\n\nPrem Benefits\n\nEffortless Integration\nSeamlessly implement machine learning models with the user-friendly interface of OpenAI\'s API.\n\nReady for the Real World\nBypass the complexities of inference optimizations. Prem\'s got you covered.\n\nRapid Iterations, Instant Results\nDevelop, test, and deploy your models in just minutes.\n\nPrivacy Above All\nYour keys, your models. We ensure end-to-end encryption.\n\nComprehensive Documentation\nDive into our rich resources and learn how to make the most of Prem.\n\nPreserve Your Anonymity\nMake payments with Bitcoin and Cryptocurrency. It\'s a permissionless infrastructure, designed for you.\n\n"""\nquery_result = embeddings.embed_query(text)\nprint(query_result)\n')))}d.isMDXComponent=!0}}]);