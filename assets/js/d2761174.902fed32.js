"use strict";(self.webpackChunkprem_docs=self.webpackChunkprem_docs||[]).push([[4292],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(a),h=r,d=m["".concat(p,".").concat(h)]||m[h]||u[h]||l;return a?n.createElement(d,o(o({ref:t},c),{},{components:a})):n.createElement(d,o({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=h;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},88021:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const l={slug:"perplexity-ai-self-hosted",title:"Build a Perplexity AI clone on Prem",authors:["tiero"],tags:["llm","ai","self-hosted","prem","open-source","perplexity","paperspace","dolly"]},o=void 0,i={permalink:"/blog/perplexity-ai-self-hosted",editUrl:"https://github.com/premAI-io/dev-portal/blog/2023-07-01-perplexity-ai-self-hosted/index.md",source:"@site/blog/2023-07-01-perplexity-ai-self-hosted/index.md",title:"Build a Perplexity AI clone on Prem",description:"Clarity AI Screenshot",date:"2023-07-01T00:00:00.000Z",formattedDate:"July 1, 2023",tags:[{label:"llm",permalink:"/blog/tags/llm"},{label:"ai",permalink:"/blog/tags/ai"},{label:"self-hosted",permalink:"/blog/tags/self-hosted"},{label:"prem",permalink:"/blog/tags/prem"},{label:"open-source",permalink:"/blog/tags/open-source"},{label:"perplexity",permalink:"/blog/tags/perplexity"},{label:"paperspace",permalink:"/blog/tags/paperspace"},{label:"dolly",permalink:"/blog/tags/dolly"}],readingTime:2.985,hasTruncateMarker:!0,authors:[{name:"Marco Argentieri",title:"Bitcoin wizard",url:"https://github.com/tiero",imageURL:"https://github.com/tiero.png",key:"tiero"}],frontMatter:{slug:"perplexity-ai-self-hosted",title:"Build a Perplexity AI clone on Prem",authors:["tiero"],tags:["llm","ai","self-hosted","prem","open-source","perplexity","paperspace","dolly"]},nextItem:{title:"Hello Prem!",permalink:"/blog/hello-prem"}},p={authorsImageUrls:[void 0]},s=[{value:"What is Perplexity AI?",id:"what-is-perplexity-ai",level:2},{value:"What is Prem?",id:"what-is-prem",level:2},{value:"How to build Perplexity AI on Prem",id:"how-to-build-perplexity-ai-on-prem",level:2},{value:"Overview",id:"overview",level:3},{value:"Step 1: Clone the Clarity AI repository",id:"step-1-clone-the-clarity-ai-repository",level:3},{value:"Step 2: Little tweaks (optional)",id:"step-2-little-tweaks-optional",level:3},{value:"Step 3: Install Prem on Paperspace",id:"step-3-install-prem-on-paperspace",level:3},{value:"Step 4: Download the model",id:"step-4-download-the-model",level:3},{value:"Step 5: Run the model",id:"step-5-run-the-model",level:3},{value:"Step 6: Run the app",id:"step-6-run-the-app",level:3},{value:"Step 7: Enjoy!",id:"step-7-enjoy",level:3}],c={toc:s},m="wrapper";function u(e){let{components:t,...l}=e;return(0,r.kt)(m,(0,n.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Clarity AI Screenshot",src:a(88847).Z,width:"1766",height:"1026"})),(0,r.kt)("p",null,"Build your own Perplexity AI clone with ",(0,r.kt)("a",{parentName:"p",href:"https://premai.io"},"Prem")," using the ",(0,r.kt)("inlineCode",{parentName:"p"},"Dolly v2 12B")," model, self-hosted on ",(0,r.kt)("a",{parentName:"p",href:"https://www.paperspace.com/gpu-cloud"},"Paperspace Cloud")," virtual server."),(0,r.kt)("h2",{id:"what-is-perplexity-ai"},"What is Perplexity AI?"),(0,r.kt)("p",null,"Perplexity AI is a conversational search engine and chatbot that acts as a search engine that scans the internet to provide users with straightforward answers to their questions. It is a great tool for students, researchers, and anyone who wants to learn more about a topic."),(0,r.kt)("h2",{id:"what-is-prem"},"What is Prem?"),(0,r.kt)("p",null,"Prem is a self-hosted AI platform that allows you to test and deploy open-source AI models on your own infrastructure. Prem is open-source and free to use. You can learn more about Prem ",(0,r.kt)("a",{parentName:"p",href:"https://premai.io"},"here"),"."),(0,r.kt)("h2",{id:"how-to-build-perplexity-ai-on-prem"},"How to build Perplexity AI on Prem"),(0,r.kt)("h3",{id:"overview"},"Overview"),(0,r.kt)("p",null,"For this tutorial we are going to use the ",(0,r.kt)("strong",{parentName:"p"},"fantastic")," open-source frontend ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mckaywrigley/clarity-ai"},"Clarity AI")," built by ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mckaywrigley"},"Mckay Wrigley"),". \ud83d\udc4f Kudos to him for building such a great tool!"),(0,r.kt)("p",null,"Since ",(0,r.kt)("inlineCode",{parentName:"p"},"ClarityAI")," uses ChatGPT by OpenAI, the integration with Prem it's staightforward as we only need to change the API endpoint and use a random string as API key, to skip the authentication."),(0,r.kt)("p",null,"As infrastructure, we are going to use ",(0,r.kt)("a",{parentName:"p",href:"https://www.paperspace.com/gpu-cloud"},"Paperspace Cloud"),". You can use any other cloud provider or your own server with a NVIDIA GPU."),(0,r.kt)("h3",{id:"step-1-clone-the-clarity-ai-repository"},"Step 1: Clone the Clarity AI repository"),(0,r.kt)("p",null,"First, we need to clone the Clarity AI repository. We are going to use the follwing commit hash ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mckaywrigley/clarity-ai/commit/5a33db140d253f47da3f07ad1475938c14dfda45"},(0,r.kt)("inlineCode",{parentName:"a"},"5a33db1"))," for future reference."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/mckaywrigley/clarity-ai\n")),(0,r.kt)("h3",{id:"step-2-little-tweaks-optional"},"Step 2: Little tweaks (optional)"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u2139\ufe0f ",(0,r.kt)("strong",{parentName:"p"},"skip this step")," You can use my own ",(0,r.kt)("inlineCode",{parentName:"p"},"clarity-ai")," fork ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/tiero/clarity-ai"},"github.com/tiero/clarity-ai"))),(0,r.kt)("hr",null),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open the ",(0,r.kt)("inlineCode",{parentName:"p"},"clarity-ai")," project with your editor of choice. I'm using ",(0,r.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/"},"Visual Studio Code"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Open the ",(0,r.kt)("inlineCode",{parentName:"p"},"components/Search.tsx")," file, at line 16 we need to pre-populate the ",(0,r.kt)("inlineCode",{parentName:"p"},"apiKey")," state with a random string. "))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const [apiKey, setApiKey] = useState<string>("X".repeat(51));\n')),(0,r.kt)("p",null,"This is needed because we are not going to use the authentication system of OpenAI and Prem is currently exposing the endpoints without authentication."),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Open the ",(0,r.kt)("inlineCode",{parentName:"li"},"utils/answer.ts")," file, at line 8 we need to change the API endpoint from OpenAI to be sourced from environment variable ",(0,r.kt)("inlineCode",{parentName:"li"},"NEXT_PUBLIC_API_URL"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"`${process.env.NEXT_PUBLIC_API_URL}/v1/chat/completions`\n")),(0,r.kt)("p",null,"Done! \ud83c\udf89"),(0,r.kt)("h3",{id:"step-3-install-prem-on-paperspace"},"Step 3: Install Prem on Paperspace"),(0,r.kt)("p",null,"Create a Paperspace account if you don't have one already, then login to the ",(0,r.kt)("a",{parentName:"p",href:"https://console.paperspace.com/"},"Paperspace Console"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a machine with the following specs:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Machine Type"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"P6000"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"V100-32G"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"A100"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"A100-80G"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"A5000"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"A6000")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"GPU"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"NVIDIA GPU")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Machine OS"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ML-in-a-Box")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Machine Storage"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"50 GB")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Memory"),": min 24 GiB")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Connect to the instance via SSH")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ssh paperspace@<your-instance-ip>\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Install Prem")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget -q https://get.prem.ninja/install.sh -O install.sh; sudo bash ./install.sh\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Check the app is live.")),(0,r.kt)("p",null,"Visit the following URL in your browser: ",(0,r.kt)("inlineCode",{parentName:"p"},"http://<your-instance-ip>:8000")," to confirm the Prem App is up and running."),(0,r.kt)("h3",{id:"step-4-download-the-model"},"Step 4: Download the model"),(0,r.kt)("p",null,"From the Prem App, select the ",(0,r.kt)("inlineCode",{parentName:"p"},"Dolly v2 12B")," model and click on the ",(0,r.kt)("strong",{parentName:"p"},"dowload")," icon."),(0,r.kt)("h3",{id:"step-5-run-the-model"},"Step 5: Run the model"),(0,r.kt)("p",null,"From the Prem App, select the ",(0,r.kt)("inlineCode",{parentName:"p"},"Dolly v2 12B")," model and click on Open. This will start the container and open the chat UI. At this point we don't need the embedded user interface, so we can close it."),(0,r.kt)("h3",{id:"step-6-run-the-app"},"Step 6: Run the app"),(0,r.kt)("p",null,"Now back to the frontend, let's run it locally and connect to our Prem instance."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Set the right environment variable ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export NEXT_PUBLIC_API_URL=http://<your-instance-ip>:8000\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Install the dependencies")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Run the frontend")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run dev\n")),(0,r.kt)("h3",{id:"step-7-enjoy"},"Step 7: Enjoy!"),(0,r.kt)("p",null,"Visit the following URL in your browser: ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:3000")," to start using your own Perplexity AI clone!"))}u.isMDXComponent=!0},88847:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/screenshot-53f674e6dc0f7f308e1463aceab77a7e.png"}}]);